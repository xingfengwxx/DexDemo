apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.wangxingxing.dexdemo"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    aaptOptions { cruncherEnabled = false }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.blankj:utilcodex:1.26.0'
}

//删除dynamic.jar包任务
task clearJar(type: Delete) {
    delete('libs/dynamic.jar')
}

//打包任务
task makeJar(type: org.gradle.api.tasks.bundling.Jar) {
//指定生成的jar名称
    baseName 'dynamic'
//从哪里打包class文件
    from('build/intermediates/javac/debug/classes/com/wangxingxing/dexdemo/dynamic')
//打包到jar后的目录结构
    into('com/wangxingxing/dexdemo/dynamic/')
//去掉不需要打包的目录和文件
    exclude('text/', 'Dynamic.class', 'R.class', 'BuildConfig.class', 'MainActivity.class')
//去掉R$开头的文件
    exclude { it.name.startsWith('R$') }
}

makeJar.dependsOn(clearJar, build)
